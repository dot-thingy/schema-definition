Thingy {
  // OVERALL SCHEMA
  ThingyDefinitionExpr = Comment* ThingySchema Comment*
  ThingySchema = ApplicationDefinition ThingySchemaDeclarationExpr*
  ThingySchemaDeclarationExpr = ThingySchemaDeclarations | Comment
  ThingySchemaDeclarations = IncludeDefinition | ConfigDefinition | ComponentDefinition | SourceDefinition | EndpointDefinition

  // COMMON TYPES
  PascalCased = upper alnum*
  QuotedThingyString = Quoted<ThingyString>
  ThingyString = (~QuoteChar Any)*
  ThingyThingDeclaration = PascalCased
  QuoteChar = ((~"\\" "'") | (~"\\" "\""))
  Quoted<x> = QuoteChar x QuoteChar
  QuotedFilePath = Quoted<FilePath>
  EndpointPath = "/" alnum* ("/" alnum*)*
  FilePath = alnum* ("/" alnum+)* ("." alnum+)+
  Comment = "//" (~"\n" any)* "\n"
  AssignmentChar = "="
  AssignmentExpr<assignee, evaluator> = assignee AssignmentChar evaluator
  // ComputedValue = Quoted<ComputedValueKeywordExpr>
  // ComputedValueKeywordExpr = KeywordStringInterpolation
  // KeywordStringInterpolation = "${" KeywordStringInterpolationExpr "}"
  // KeywordStringInterpolationExpr = (~"}" KeywordStringInterpolationInput)+
  // KeywordStringInterpolationInput = ReservedComputedInjections+ "." Any+
  Any = any

  // THINGY GLOBAL OBJECT RESERVED KEYWORDS - WIP: not working yet!
  AnyUnreservedComputedInjections = (~ReservedComputedInjections Any)+
  ReservedComputedInjections = (SecretsKeyword | EnvKeyword)
  SecretsKeyword = "@SECRETS"
  EnvKeyword = "@ENV"
  ApplicationDefKeyword = "Application"
  ConfigDefKeyword = "Config"
  IncludeDefKeyword = "Include"
  ComponentDefKeyword = "Component"
  SourceDefKeyword = "Source"
  EndpointDefKeyword = "Endpoint"

  ////////////////////////////
  // GLOBAL TYPES AVAILABLE //
  ////////////////////////////

  // APPLICATION
  ApplicationDefinition = ApplicationDefKeyword ApplicationName "{" ApplicationExpr "}"
  ApplicationName = ThingyThingDeclaration
  ApplicationExpr = (ApplicationProperty | Comment)*
  ApplicationProperty = ApplicationPropDisplayNameExpr | ApplicationPropSecretsExpr
  // display name
  ApplicationPropDisplayNameExpr = AssignmentExpr<"DisplayName", Quoted<ApplicationPropDisplayName>>
  ApplicationPropDisplayName = (~QuoteChar Any)*
  // secrets
  ApplicationPropSecretsExpr = AssignmentExpr<"Secrets", Quoted<ApplicationPropSecrets>>
  ApplicationPropSecrets = FilePath

  // CONFIG OPTIONS
  ConfigDefinition = ConfigDefKeyword ConfigName "{" ConfigExpr "}"
  ConfigName = ThingyThingDeclaration
  ConfigExpr = (ConfigPropertyExpr | Comment)+
  // property defs
  ConfigPropertyExpr = AssignmentExpr<ConfigPropertyName, ConfigValue>
  ConfigPropertyName = ThingyThingDeclaration
  ConfigValue = StaticConfigValueDigit | ConfigValueString
  // ConfigValueString = Quoted<(~QuoteChar Any)*>
  ConfigValueString = QuotedThingyString
  StaticConfigValueDigit = (~"\n" digit)+
  // StaticConfigValueString = (~QuoteChar Any)*

  // INCLUDES
  IncludeDefinition = IncludeDefKeyword QuotedFilePath

  // STORAGES
  // StorageDefinition = "Storage" StorageName "{" ConnectionOptions "}"
  // StorageName = ThingyThingDeclaration
  // ConnectionOptions = (ConnectionOption | Comment | Any)*
  // ConnectionOptionPropertyName = ThingyThingDeclaration
  // ConnectionOption = ConnectionOptionPropertyName AssignmentChar alnum+ spaces?

  // COMPONENTS
  ComponentDefinition = ComponentDefKeyword ComponentName "{" ComponentExpr "}"
  ComponentName = ThingyThingDeclaration
  ComponentExpr = AssignmentExpr<"source", ComponentSource>
  ComponentSource = QuotedFilePath

  // SOURCES
  SourceDefinition = SourceDefKeyword SourceName "{" SourceExpr "}"
  SourceName = ThingyThingDeclaration
  SourceExpr = SourceTypeExpr SourceSourceExpr
  // type
  SourceTypeExpr = AssignmentExpr<"type", SourceType>
  SourceType = ("Function" | "Component")
  // source
  SourceSourceExpr = AssignmentExpr<"source", SourceSource>
  SourceSource = (ComponentName | QuotedFilePath)

  // ENDPOINTS
  EndpointDefinition = EndpointDefKeyword EndpointName "{" EndpointExpr "}"
  EndpointName = ThingyThingDeclaration
  EndpointExpr = EndpointMethodExpr EndpointPathExpr EndpointUseExpr
  // method
  EndpointMethodExpr = AssignmentExpr<"method", EndpointMethod>
  EndpointMethod = "GET" | "POST" | "PUT" | "DELETE"
  // path
  EndpointPathExpr = AssignmentExpr<"path", EndpointPathDef>
  EndpointPathDef = Quoted<EndpointPath>
  // use
  EndpointUseExpr = AssignmentExpr<"use", EndpointUseComponentExpr>
  EndpointUseComponentExpr = ComponentName
}
